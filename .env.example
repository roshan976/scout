# Scout Environment Configuration Template
# Copy this file to .env and update with your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Port for the Express server to listen on
PORT=3000

# Node.js environment (development, production, test)
NODE_ENV=development

# =============================================================================
# OPENAI CONFIGURATION (Optional - Scout runs in demo mode without these)
# =============================================================================

# OpenAI API key for AI-powered responses
# Get from: https://platform.openai.com/api-keys
# Example: sk-proj-abc123...
OPENAI_API_KEY=your_openai_api_key_here

# OpenAI Assistant ID for document search
# Created automatically when first document is uploaded
# Or create manually in OpenAI console
# Example: asst_abc123...
OPENAI_ASSISTANT_ID=your_assistant_id_here

# =============================================================================
# SLACK CONFIGURATION (Required for Slack bot functionality)
# =============================================================================

# Bot User OAuth Token
# Found in: Slack App Console > OAuth & Permissions
# Starts with: xoxb-
SLACK_BOT_TOKEN=your_bot_token_here

# Signing Secret for request verification
# Found in: Slack App Console > Basic Information
SLACK_SIGNING_SECRET=your_signing_secret_here

# App-Level Token for Socket Mode
# Found in: Slack App Console > Basic Information > App-Level Tokens
# Starts with: xapp-
SLACK_APP_TOKEN=your_app_token_here

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Custom Slack port (defaults to 3001)
# SLACK_PORT=3001

# Enable debug logging
# DEBUG=scout:*

# Custom upload directory (defaults to 'uploads')
# UPLOAD_DIR=uploads

# Custom data directory (defaults to 'data')  
# DATA_DIR=data

# Maximum file size in bytes (defaults to 10MB)
# MAX_FILE_SIZE=10485760

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================

# When NODE_ENV=production, consider these additional settings:

# Database URL (if implementing database storage)
# DATABASE_URL=postgresql://user:pass@localhost:5432/scout

# Redis URL (if implementing caching)
# REDIS_URL=redis://localhost:6379

# Log level (error, warn, info, debug)
# LOG_LEVEL=info

# CORS origins (comma-separated list)
# CORS_ORIGINS=https://scout.yourcompany.com,https://app.yourcompany.com

# =============================================================================
# SECURITY CONFIGURATION (For production)
# =============================================================================

# JWT secret for authentication (if implemented)
# JWT_SECRET=your_jwt_secret_here

# Session secret for secure sessions
# SESSION_SECRET=your_session_secret_here

# Rate limiting - requests per minute per IP
# RATE_LIMIT_REQUESTS=60

# Rate limiting - window in minutes  
# RATE_LIMIT_WINDOW=1

# =============================================================================
# MONITORING & OBSERVABILITY (Optional)
# =============================================================================

# Application insights key (Azure)
# APPINSIGHTS_INSTRUMENTATIONKEY=your_key_here

# Datadog API key
# DD_API_KEY=your_datadog_key_here

# New Relic license key
# NEW_RELIC_LICENSE_KEY=your_newrelic_key_here

# Custom metrics endpoint
# METRICS_ENDPOINT=https://metrics.yourcompany.com

# =============================================================================
# FEATURE FLAGS (Optional)
# =============================================================================

# Enable/disable OpenAI integration
# ENABLE_OPENAI=true

# Enable/disable Slack integration  
# ENABLE_SLACK=true

# Enable/disable file uploads
# ENABLE_UPLOADS=true

# Enable enhanced response formatting
# ENABLE_ENHANCED_FORMATTING=true

# =============================================================================
# DEVELOPMENT HELPERS
# =============================================================================

# Mock OpenAI responses (for development/testing)
# MOCK_OPENAI=false

# Mock Slack responses (for development/testing)
# MOCK_SLACK=false

# Enable request/response logging
# ENABLE_REQUEST_LOGGING=true

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.example .env

# 2. Update the values above with your actual configuration

# 3. At minimum, set these for basic functionality:
#    - PORT (if not using 3000)
#    - OPENAI_API_KEY and OPENAI_ASSISTANT_ID (for AI features)
#    - SLACK_* tokens (for Slack integration)

# 4. Start the application:
#    npm start

# 5. Test basic functionality:
#    curl http://localhost:3000/health

# =============================================================================
# GETTING CREDENTIALS
# =============================================================================

# OPENAI_API_KEY:
# 1. Visit https://platform.openai.com/
# 2. Go to API Keys section  
# 3. Create new secret key
# 4. Copy the key (starts with sk-)

# OPENAI_ASSISTANT_ID:
# 1. Upload a document via the web interface (http://localhost:3000)
# 2. Check the logs for "Assistant created with ID: asst_..."  
# 3. Or create manually in OpenAI console

# SLACK TOKENS:
# 1. Visit https://api.slack.com/apps
# 2. Create new app or select existing app
# 3. Get Bot Token from OAuth & Permissions
# 4. Get Signing Secret from Basic Information
# 5. Create App Token with connections:write scope
# 6. Enable Socket Mode

# =============================================================================